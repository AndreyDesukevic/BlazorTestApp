@page "/client/{clientId:int}"
@inject BlazorTestApp.DAL.Repositories.IBaseRepository<Order> orderRepository
@inject IClientService clientService

@using BlazorTestApp.DAL.DbModels;
<div class="container-fluid">
    <div class="row">
        <div class="col bg-dark text-white text-center">
            <h2>@_client.FirstName  @_client.LastName</h2>
        </div>
    </div>
    <br />
    <div class="row border rounded">
        <br />
        <div class="col">
            <div>
                Description:
            </div>
            <div>
                @_client.Description
            </div>
        </div>
        <div class="col border-left">
            <div>
                Create Data: @_client.DateCreate
            </div>
            <div>
                Status:@_client.ClientStatus
            </div>
        </div>
        <div class="col border-left">
            <div>
                <button class="btn btn-info">Edit Client</button>
            </div>
        </div>
        <br />
        <br />
    </div>
    <br />
    <div class="row border rounded">
        <EditForm Model="@_order" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <ImputComponent Label="Description">
                <Control>
                    <input type="text" @bind-value="_order.Description" placeholder="Description" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </Control>
            </ImputComponent>
            <ImputComponent Label="Cost">
                <Control>
                    <input type="text" @bind-value="_order.Cost" placeholder="Cost" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </Control>
            </ImputComponent>
            <button class="btn btn-success" type="submit">Add</button>
        </EditForm>
    </div>
    @if (_client.Orders.Count > 0)
    {
        <div class="row">
            <div class="text-center">
                <h3>Orders:</h3>
            </div>
            <div>
                <TableComponent Items="_client.Orders" Context="order">
                    <TableHeader>
                        <th>Id Order</th>
                        <th>Description</th>
                        <th>Order Data</th>
                        <th>Order Status</th>
                        <th>Cost</th>
                        <th></th>
                        <th></th>
                    </TableHeader>
                    <RowTemplate>
                        <td>@order.Id</td>
                        <td>@order.Description</td>
                        <td>@order.OrderData</td>
                        <td>@order.OrderStatus</td>
                        <td>@order.Cost</td>
                        <td><button class="btn btn-info">Edit</button></td>
                        <td><button class="btn btn-danger" @onclick="(()=>DeleteOrder(order))">Delete</button></td>
                    </RowTemplate>
                </TableComponent>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <h3>No orders</h3>
        </div>
    }
</div>


@code {
    [Parameter]
    public int ClientId { get; set; }
    private Client _client = new Client();
    private Order _order;

    protected override void OnInitialized()
    {
        _order = new Order();
        _client = clientService.GetById(ClientId);
    }
    private void DeleteOrder(Order order)
    {
        orderRepository.Delete(order);
    }
    private void HandleValidSubmit()
    {
        AddNewOrder(_client);
    }
    private void AddNewOrder(Client client)
    {
        _order.OrderData=DateTime.Now;
        _order.OrderStatus = OrderStatus.New;
        _client.Orders.Add(_order);
        clientService.Save(_client);
        OnInitialized();
    }
    
}
